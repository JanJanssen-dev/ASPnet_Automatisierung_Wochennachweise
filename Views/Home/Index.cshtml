@model UmschulungConfig
@{
    ViewData["Title"] = "Wochennachweis-Generator";
    var debugEnabled = Context.RequestServices.GetRequiredService<Microsoft.Extensions.Options.IOptions<DebugOptions>>().Value.EnableDebug;
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <h1 class="my-4 text-center">
                <i class="bi bi-file-earmark-word text-primary me-2"></i>
                Wochennachweis-Generator
                @if (debugEnabled)
                {
                    <small class="badge bg-warning text-dark ms-2">🔧 DEBUG</small>
                }
            </h1>
            <p class="text-center text-muted mb-4">
                Automatische Erstellung von Wochennachweisen für Umschulung und Praktikum
                <br><small><i class="bi bi-cpu me-1"></i>Client-seitige Generierung - Keine Server-Last</small>
            </p>

            @if (TempData["StatusMessage"] != null)
            {
                <div class="alert alert-@(TempData["StatusMessageType"] ?? "success") alert-dismissible fade show" role="alert">
                    <i class="bi bi-@(TempData["StatusMessageType"]?.ToString() == "danger" ? "exclamation-triangle" : "check-circle") me-2"></i>@TempData["StatusMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- ================================ -->
            <!-- 🔧 DEBUG-PANEL (nur wenn Debug aktiv) -->
            <!-- ================================ -->
            @if (debugEnabled)
            {
                <div class="card mb-4 border-warning">
                    <div class="card-header bg-warning text-dark">
                        <h6 class="mb-0">
                            <i class="bi bi-wrench me-2"></i>Debug-Panel
                            <button class="btn btn-sm btn-outline-dark float-end" type="button" data-bs-toggle="collapse" data-bs-target="#debugPanel">
                                Toggle
                            </button>
                        </h6>
                    </div>
                    <div class="collapse" id="debugPanel">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <h6>🧪 Form-Tests</h6>
                                    <form action="/Home/DebugSubmit" method="post" id="debug-form" class="mb-2">
                                        <button type="button" class="btn btn-sm btn-success w-100" onclick="document.getElementById('debug-form').submit();">
                                            ✅ Debug Submit
                                        </button>
                                    </form>
                                    <button type="button" class="btn btn-sm btn-info w-100" onclick="debugFormSubmit('wochennachweis-form')">
                                        🔧 Debug Generate
                                    </button>
                                </div>
                                <div class="col-md-4">
                                    <h6>📊 Session-Info</h6>
                                    <small class="text-muted">
                                        Zeiträume: @Model.Zeitraeume.Count<br>
                                        Nachname: @(string.IsNullOrEmpty(Model.Nachname) ? "leer" : Model.Nachname)<br>
                                        Debug aktiv: ✅<br>
                                        Zeiträume.Any(): @Model.Zeitraeume.Any()<br>
                                        Tabelle ID: zeitraeume-table
                                    </small>
                                </div>
                                <div class="col-md-4">
                                    <h6>🔧 Tools</h6>
                                    <button type="button" class="btn btn-sm btn-secondary w-100 mb-1" onclick="console.clear();">
                                        🧹 Console leeren
                                    </button>
                                    <button type="button" class="btn btn-sm btn-secondary w-100 mb-1" onclick="window.location.reload();">
                                        🔄 Seite neu laden
                                    </button>
                                    <button type="button" class="btn btn-sm btn-info w-100" onclick="debugDOMElements();">
                                        🔍 DOM debuggen
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- ================================ -->
            <!-- 🔧 HAUPTFORMULAR - BEHOBEN -->
            <!-- ================================ -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-person-circle me-2"></i>Grunddaten
                    </h5>
                </div>
                <div class="card-body">
                    <form action="/Home/Generate" method="post" id="wochennachweis-form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Umschulungsbeginn" class="form-label">
                                        <i class="bi bi-calendar-event me-1"></i>Beginn der Umschulung/des Praktikums
                                    </label>
                                    <input asp-for="Umschulungsbeginn" class="form-control" type="date" required id="Umschulungsbeginn" />
                                    <span asp-validation-for="Umschulungsbeginn" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Klasse" class="form-label">
                                        <i class="bi bi-mortarboard me-1"></i>Klasse/Kurs
                                    </label>
                                    <input asp-for="Klasse" class="form-control" required id="Klasse"
                                           placeholder="z.B. FIAE-2023-A" />
                                    <span asp-validation-for="Klasse" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Nachname" class="form-label">
                                        <i class="bi bi-person me-1"></i>Nachname
                                    </label>
                                    <input asp-for="Nachname" class="form-control" required id="Nachname" />
                                    <span asp-validation-for="Nachname" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Vorname" class="form-label">
                                        <i class="bi bi-person me-1"></i>Vorname
                                    </label>
                                    <input asp-for="Vorname" class="form-control" required id="Vorname" />
                                    <span asp-validation-for="Vorname" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- ================================ -->
                        <!-- 🔧 ZEITRÄUME-TABELLE - BEHOBEN -->
                        <!-- ================================ -->
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center bg-light">
                                <h5 class="mb-0">
                                    <i class="bi bi-calendar3 me-2"></i>Definierte Zeiträume
                                </h5>
                                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#zeitraumModal">
                                    <i class="bi bi-plus-circle me-1"></i>Neuen Zeitraum hinzufügen
                                </button>
                            </div>
                            <div class="card-body">
                                @if (!Model.Zeitraeume.Any())
                                {
                                    <div class="alert alert-info">
                                        <i class="bi bi-info-circle me-2"></i>
                                        Es wurden noch keine Zeiträume definiert. Bitte fügen Sie mindestens einen Zeitraum hinzu.
                                    </div>
                                }
                                else
                                {
                                    <!-- 🔧 DELETE-FORMS HIER INNERHALB DES ELSE-BLOCKS -->
                                    @for (int i = 0; i < Model.Zeitraeume.Count; i++)
                                    {
                                        <form action="/Home/DeleteZeitraum" method="post" class="delete-zeitraum-form" id="delete-form-@i" style="display: none;">
                                            <input type="hidden" name="index" value="@i" />
                                        </form>
                                    }

                                    <div class="table-responsive">

                                        <table class="table table-striped table-hover" id="zeitraeume-table">
                                            <thead class="table-dark">
                                                <tr>
                                                    <th><i class="bi bi-tag me-1"></i>Kategorie</th>
                                                    <th><i class="bi bi-calendar me-1"></i>Von</th>
                                                    <th><i class="bi bi-calendar me-1"></i>Bis</th>
                                                    <th><i class="bi bi-card-text me-1"></i>Beschreibung</th>
                                                    <th><i class="bi bi-gear me-1"></i>Aktion</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < Model.Zeitraeume.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            <span class="badge bg-@(Model.Zeitraeume[i].Kategorie == "Praktikum" ? "success" : "primary")">
                                                                @Model.Zeitraeume[i].Kategorie
                                                            </span>
                                                        </td>
                                                        <td>@Model.Zeitraeume[i].Start.ToString("dd.MM.yyyy")</td>
                                                        <td>@Model.Zeitraeume[i].Ende.ToString("dd.MM.yyyy")</td>
                                                        <td>@Model.Zeitraeume[i].Beschreibung</td>
                                                        <td>
                                                            <!-- 🔧 NUR BUTTON - FORM IST OBEN -->
                                                            <button type="button" class="btn btn-danger btn-sm delete-zeitraum-btn"
                                                                    data-zeitraum-index="@i"
                                                                    onclick="deleteZeitraum(@i)">
                                                                <i class="bi bi-trash"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>

                                    <!-- Zeitraum-Statistiken -->
                                    <div class="row mt-3">
                                        <div class="col-md-6">
                                            <small class="text-muted">
                                                <i class="bi bi-info-circle me-1"></i>
                                                Praktikum: @Model.Zeitraeume.Count(z => z.Kategorie == "Praktikum") Zeiträume
                                            </small>
                                        </div>
                                        <div class="col-md-6">
                                            <small class="text-muted">
                                                <i class="bi bi-info-circle me-1"></i>
                                                Umschulung: @Model.Zeitraeume.Count(z => z.Kategorie == "Umschulung") Zeiträume
                                            </small>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- ================================ -->
                        <!-- 🔧 GENERATE-BUTTON - BEHOBEN -->
                        <!-- ================================ -->
                        <div class="text-center mb-4">
                            <button type="button" class="btn btn-success btn-lg px-5" id="generate-button"
                                    disabled="@(!Model.Zeitraeume.Any())"
                                    onclick="document.getElementById('wochennachweis-form').submit();">
                                <i class="bi bi-file-earmark-word me-2"></i>
                                Wochennachweise generieren
                                <br><small class="fw-normal">Client-seitige Erstellung</small>
                            </button>

                            <!-- TEST-BUTTON -->
                            <button type="button" class="btn btn-outline-secondary ms-2" id="test-docxtemplater-button">
                                <i class="bi bi-wrench me-1"></i>
                                Docxtemplater testen
                            </button>

                            @if (!Model.Zeitraeume.Any())
                            {
                                <div class="mt-2">
                                    <small class="text-muted">
                                        <i class="bi bi-exclamation-triangle me-1"></i>
                                        Bitte fügen Sie mindestens einen Zeitraum hinzu
                                    </small>
                                </div>
                            }
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- ================================ -->
<!-- 🔧 MODAL - KOMPLETT BEHOBEN -->
<!-- ================================ -->
<div class="modal fade" id="zeitraumModal" tabindex="-1" aria-labelledby="zeitraumModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/Home/AddZeitraum" method="post" id="modal-form">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="zeitraumModalLabel">
                        <i class="bi bi-plus-circle me-2"></i>Neuen Zeitraum hinzufügen
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <!-- Hidden fields für Grunddaten -->
                    <input type="hidden" name="Umschulungsbeginn" id="hidden-umschulungsbeginn" />
                    <input type="hidden" name="Nachname" id="hidden-nachname" />
                    <input type="hidden" name="Vorname" id="hidden-vorname" />
                    <input type="hidden" name="Klasse" id="hidden-klasse" />

                    <div class="mb-3">
                        <label for="NeuZeitraum_Kategorie" class="form-label">
                            <i class="bi bi-tag me-1"></i>Kategorie *
                        </label>
                        <select name="NeuZeitraum.Kategorie" id="NeuZeitraum_Kategorie" class="form-select" required>
                            <option value="">Bitte wählen...</option>
                            <option value="Umschulung">Umschulung</option>
                            <option value="Praktikum">Praktikum</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="NeuZeitraum_Start" class="form-label">
                            <i class="bi bi-calendar-event me-1"></i>Startdatum *
                        </label>
                        <input type="date" name="NeuZeitraum.Start" id="NeuZeitraum_Start" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="NeuZeitraum_Ende" class="form-label">
                            <i class="bi bi-calendar-x me-1"></i>Enddatum *
                        </label>
                        <input type="date" name="NeuZeitraum.Ende" id="NeuZeitraum_Ende" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="NeuZeitraum_Beschreibung" class="form-label">
                            <i class="bi bi-card-text me-1"></i>Beschreibung *
                        </label>
                        <input type="text" name="NeuZeitraum.Beschreibung" id="NeuZeitraum_Beschreibung"
                               class="form-control" required maxlength="500"
                               placeholder="z.B. Modul HTML/CSS, Praktikum bei Firma XYZ" />
                        <div class="form-text">
                            Diese Beschreibung wird in allen Wochennachweisen dieses Zeitraums verwendet.
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle me-1"></i>Abbrechen
                    </button>
                    <!-- 🔧 SUBMIT-BUTTON - BEHOBEN -->
                    <button type="button" class="btn btn-primary" id="modal-submit-btn"
                            onclick="submitModalForm()">
                        <i class="bi bi-plus-circle me-1"></i>Hinzufügen
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <!-- ================================ -->
    <!-- 🔧 JAVASCRIPT - KOMPLETT NEU & SAUBER -->
    <!-- ================================ -->
    <script>
        // ================================
        // 🔧 GLOBALE VARIABLEN
        // ================================
        var DEBUG_ENABLED = @(debugEnabled.ToString().ToLower());
        var ZEITRAEUME_COUNT = @Model.Zeitraeume.Count;
        var zeitraumModal;

        // ================================
        // 🔧 DEBUG-LOGGING
        // ================================
        function debugLog(message, category) {
            if (DEBUG_ENABLED) {
                console.log('🔧 [' + (category || 'DEBUG') + '] ' + message);
            }
        }

        // ================================
        // 🔧 DOM READY EVENT
        // ================================
        document.addEventListener('DOMContentLoaded', function () {
            debugLog('INDEX.CSHTML DOM GELADEN', 'INIT');

            initializeModal();
            initializeDeleteButtons();

            debugLog('Verfügbare Zeiträume: ' + ZEITRAEUME_COUNT, 'INIT');
        });

        // ================================
        // 🔧 MODAL INITIALISIERUNG
        // ================================
        function initializeModal() {
            var modalElement = document.getElementById('zeitraumModal');
            if (modalElement) {
                zeitraumModal = new bootstrap.Modal(modalElement, {
                    backdrop: 'static',
                    keyboard: false
                });
                debugLog('Modal initialisiert', 'MODAL');
            }

            // Modal Open Event
            var modalButton = document.querySelector('[data-bs-toggle="modal"][data-bs-target="#zeitraumModal"]');
            if (modalButton) {
                modalButton.addEventListener('click', function() {
                    debugLog('Modal wird geöffnet', 'MODAL');
                    prefillModalData();
                });
            }

            // Modal Reset Event
            if (modalElement) {
                modalElement.addEventListener('hidden.bs.modal', function () {
                    debugLog('Modal wird zurückgesetzt', 'MODAL');
                    resetModalForm();
                });
            }

            // Auto-Close Modal
        @if (TempData["CloseModal"] != null && TempData["CloseModal"].ToString().ToLower() == "true")
        {
            <text>
                    debugLog('Modal wird automatisch geschlossen', 'MODAL');
                    setTimeout(function() {
                        if (zeitraumModal) {
                            zeitraumModal.hide();
                        }
                        setTimeout(function() {
                            window.location.reload();
                        }, 1000);
                    }, 500);
            </text>
        }
        }

        // ================================
        // 🔧 DELETE-BUTTONS INITIALISIERUNG - VEREINFACHT
        // ================================
        function initializeDeleteButtons() {
            var deleteButtons = document.querySelectorAll('.delete-zeitraum-btn');
            debugLog('Delete-Buttons gefunden: ' + deleteButtons.length, 'DELETE');

            // Buttons sind jetzt mit onclick="deleteZeitraum(index)" - keine Event-Listener nötig
            debugLog('Delete-Buttons verwenden onclick-Attribute', 'DELETE');
        }

        // ================================
        // 🔧 MODAL HELPER FUNCTIONS
        // ================================
        function prefillModalData() {
            // Grunddaten sammeln
            var grunddaten = {
                umschulungsbeginn: document.getElementById('Umschulungsbeginn').value || '',
                nachname: document.getElementById('Nachname').value || '',
                vorname: document.getElementById('Vorname').value || '',
                klasse: document.getElementById('Klasse').value || ''
            };

            // Hidden Fields setzen
            document.getElementById('hidden-umschulungsbeginn').value = grunddaten.umschulungsbeginn;
            document.getElementById('hidden-nachname').value = grunddaten.nachname;
            document.getElementById('hidden-vorname').value = grunddaten.vorname;
            document.getElementById('hidden-klasse').value = grunddaten.klasse;

            // Datum vorausfüllen
            var heute = new Date().toISOString().split('T')[0];
            var startDate = grunddaten.umschulungsbeginn || heute;
            var endDateObj = new Date(startDate);
            endDateObj.setMonth(endDateObj.getMonth() + 1);
            var endDate = endDateObj.toISOString().split('T')[0];

            document.getElementById('NeuZeitraum_Start').value = startDate;
            document.getElementById('NeuZeitraum_Ende').value = endDate;

            debugLog('Modal-Daten gesetzt: ' + JSON.stringify(grunddaten), 'MODAL');
        }

        function resetModalForm() {
            var modalForm = document.getElementById('modal-form');
            if (modalForm) {
                modalForm.reset();
            }

            var submitBtn = document.getElementById('modal-submit-btn');
            if (submitBtn) {
                submitBtn.disabled = false;
                submitBtn.innerHTML = '<i class="bi bi-plus-circle me-1"></i>Hinzufügen';
            }
        }

        // ================================
        // 🔧 DELETE FUNCTION - SUPER EINFACH
        // ================================
        function deleteZeitraum(index) {
            debugLog('deleteZeitraum() aufgerufen für Index: ' + index, 'DELETE');

            if (confirm('Zeitraum wirklich löschen?')) {
                var formId = 'delete-form-' + index;
                var form = document.getElementById(formId);

                debugLog('Delete-Form ID: ' + formId, 'DELETE');
                debugLog('Delete-Form gefunden: ' + !!form, 'DELETE');

                if (form) {
                    debugLog('Delete-Form wird abgesendet', 'DELETE');
                    form.submit();
                } else {
                    console.error('❌ Delete-Form nicht gefunden: ' + formId);
                    alert('Fehler: Form nicht gefunden!');
                }
            }
        }
        function submitModalForm() {
            debugLog('submitModalForm() aufgerufen', 'MODAL');

            var form = document.getElementById('modal-form');
            var submitBtn = document.getElementById('modal-submit-btn');

            if (!form) {
                debugLog('Modal-Form nicht gefunden', 'ERROR');
                return;
            }

            // Validierung
            var kategorie = document.getElementById('NeuZeitraum_Kategorie').value;
            var start = document.getElementById('NeuZeitraum_Start').value;
            var ende = document.getElementById('NeuZeitraum_Ende').value;
            var beschreibung = document.getElementById('NeuZeitraum_Beschreibung').value;

            if (!kategorie || !start || !ende || !beschreibung) {
                alert('Bitte alle Felder ausfüllen!');
                return;
            }

            if (new Date(ende) < new Date(start)) {
                alert('Das Enddatum muss nach dem Startdatum liegen!');
                return;
            }

            // Button deaktivieren
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Wird hinzugefügt...';
            }

            debugLog('Modal-Form wird abgesendet', 'MODAL');
            form.submit();
        }

        // ================================
        // 🔧 DEBUG FUNCTIONS (nur wenn Debug aktiv)
        // ================================
        @if (debugEnabled)
        {
            <text>
                // Debug-Funktionen
                window.testModalSubmit = function() {
                    console.log('🧪 Test Modal Submit');
                    if (zeitraumModal) {
                        zeitraumModal.show();
                        setTimeout(function() {
                            document.getElementById('NeuZeitraum_Kategorie').value = 'Umschulung';
                            document.getElementById('NeuZeitraum_Start').value = '2024-01-01';
                            document.getElementById('NeuZeitraum_Ende').value = '2024-01-31';
                            document.getElementById('NeuZeitraum_Beschreibung').value = 'Test-Zeitraum';
                            console.log('🧪 Testdaten gesetzt');
                        }, 500);
                    }
                };

                window.testDeleteButton = function(index) {
                    console.log('🧪 Test Delete Button: ' + index);
                    deleteZeitraum(index);
                };

                window.debugDOMElements = function() {
                    console.log('🔍 DOM DEBUG REPORT:');
                    console.log('=====================================');

                    console.log('📋 Alle Forms:');
                    document.querySelectorAll('form').forEach(function(form, i) {
                        console.log('  ' + i + ': ID="' + form.id + '" Class="' + form.className + '" Action="' + form.action + '"');
                    });

                    console.log('📋 Delete-Forms (außerhalb Tabelle):');
                    var deleteForms = document.querySelectorAll('.delete-zeitraum-form');
                    console.log('  Delete-Forms gefunden: ' + deleteForms.length);
                    deleteForms.forEach(function(form, i) {
                        console.log('  Form ' + i + ': ID="' + form.id + '" Action="' + form.action + '"');
                    });

                    console.log('📋 Zeiträume-Tabelle:');
                    var table = document.getElementById('zeitraeume-table');
                    console.log('  Tabelle vorhanden: ' + !!table);
                    if (table) {
                        var rows = table.querySelectorAll('tbody tr');
                        console.log('  Zeilen in tbody: ' + rows.length);

                        rows.forEach(function(row, i) {
                            var deleteBtn = row.querySelector('.delete-zeitraum-btn');
                            var onclick = deleteBtn ? deleteBtn.getAttribute('onclick') : null;
                            console.log('  Zeile ' + i + ': Button=' + !!deleteBtn + ' onclick="' + onclick + '"');
                        });
                    }

                    console.log('📋 Delete-Buttons:');
                    var deleteButtons = document.querySelectorAll('.delete-zeitraum-btn');
                    console.log('  Delete-Buttons: ' + deleteButtons.length);
                    deleteButtons.forEach(function(btn, i) {
                        console.log('  Button ' + i + ': data-index="' + btn.getAttribute('data-zeitraum-index') + '" onclick="' + btn.getAttribute('onclick') + '"');
                    });

                    console.log('=====================================');
                };

                // Debug-Info
                console.log('🔧 INDEX.CSHTML DEBUG AKTIV');
                console.log('🔧 Debug-Funktionen verfügbar:');
                console.log('- testModalSubmit() - Modal mit Testdaten öffnen');
                console.log('- testDeleteButton(index) - Delete-Button testen');
                console.log('- debugDOMElements() - DOM-Struktur debuggen');
            </text>
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}